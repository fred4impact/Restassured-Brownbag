<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="16" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-08T21:30:52 GMT" name="Func test suite 2" finished-at="2022-03-08T21:30:54 GMT" duration-ms="2105">
    <groups>
    </groups>
    <test started-at="2022-03-08T21:30:52 GMT" name="Regression Tests" finished-at="2022-03-08T21:30:54 GMT" duration-ms="2105">
      <class name="org.jsonplaceholder.GetSamples">
        <test-method signature="ValidateCompany()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:52 GMT" name="ValidateCompany" description="Test to validate company name RobelCorkery" finished-at="2022-03-08T21:30:53 GMT" duration-ms="1156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCompany -->
        <test-method signature="createNewPost()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:53 GMT" name="createNewPost" finished-at="2022-03-08T21:30:53 GMT" duration-ms="267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewPost -->
        <test-method signature="deleteUser2_Test()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:53 GMT" name="deleteUser2_Test" finished-at="2022-03-08T21:30:53 GMT" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser2_Test -->
        <test-method signature="getAllUsersTest()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:53 GMT" name="getAllUsersTest" finished-at="2022-03-08T21:30:53 GMT" duration-ms="56" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllUsersTest -->
        <test-method signature="getBodyJsonPath()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:53 GMT" name="getBodyJsonPath" finished-at="2022-03-08T21:30:53 GMT" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBodyJsonPath -->
        <test-method signature="getNestedPostUsing_QueryParam()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:53 GMT" name="getNestedPostUsing_QueryParam" finished-at="2022-03-08T21:30:54 GMT" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNestedPostUsing_QueryParam -->
        <test-method signature="getauserAndValidateUsername()[pri:0, instance:org.jsonplaceholder.GetSamples@670002]" started-at="2022-03-08T21:30:54 GMT" name="getauserAndValidateUsername" description="Test to validate user name = Antonette" finished-at="2022-03-08T21:30:54 GMT" duration-ms="66" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getauserAndValidateUsername -->
      </class> <!-- org.jsonplaceholder.GetSamples -->
    </test> <!-- Regression Tests -->
  </suite> <!-- Func test suite 2 -->
  <suite started-at="2022-03-08T21:30:47 GMT" name="Sample Test" finished-at="2022-03-08T21:30:51 GMT" duration-ms="4595">
    <groups>
    </groups>
    <test started-at="2022-03-08T21:30:47 GMT" name="Functional_Test" finished-at="2022-03-08T21:30:51 GMT" duration-ms="4595">
      <class name="regres.Test_Post_Put">
        <test-method signature="postUser()[pri:0, instance:regres.Test_Post_Put@29176cc1]" started-at="2022-03-08T21:30:51 GMT" name="postUser" finished-at="2022-03-08T21:30:51 GMT" duration-ms="342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postUser -->
        <test-method signature="putTest_On_Regres()[pri:0, instance:regres.Test_Post_Put@29176cc1]" started-at="2022-03-08T21:30:51 GMT" name="putTest_On_Regres" finished-at="2022-03-08T21:30:51 GMT" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putTest_On_Regres -->
      </class> <!-- regres.Test_Post_Put -->
      <class name="regres.Test_Hamcrest_Matcher">
        <test-method signature="allUsers_on_regres()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:47 GMT" name="allUsers_on_regres" finished-at="2022-03-08T21:30:49 GMT" duration-ms="2572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allUsers_on_regres -->
        <test-method signature="getListofUsers()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:49 GMT" name="getListofUsers" finished-at="2022-03-08T21:30:50 GMT" duration-ms="495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getListofUsers -->
        <test-method signature="validate_anyOff()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:50 GMT" name="validate_anyOff" finished-at="2022-03-08T21:30:50 GMT" duration-ms="144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_anyOff -->
        <test-method signature="validate_body_has_items()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:50 GMT" name="validate_body_has_items" finished-at="2022-03-08T21:30:50 GMT" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_body_has_items -->
        <test-method signature="validate_instanceOf()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:50 GMT" name="validate_instanceOf" finished-at="2022-03-08T21:30:51 GMT" duration-ms="402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_instanceOf -->
        <test-method signature="validate_record1()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:51 GMT" name="validate_record1" finished-at="2022-03-08T21:30:51 GMT" duration-ms="73" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_record1 -->
        <test-method signature="validate_response_size()[pri:0, instance:regres.Test_Hamcrest_Matcher@27ae2fd0]" started-at="2022-03-08T21:30:51 GMT" name="validate_response_size" finished-at="2022-03-08T21:30:51 GMT" duration-ms="118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_response_size -->
      </class> <!-- regres.Test_Hamcrest_Matcher -->
    </test> <!-- Functional_Test -->
  </suite> <!-- Sample Test -->
</testng-results>
